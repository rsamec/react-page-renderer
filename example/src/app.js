var React = require('react');
var BindToMixin = require('react-binding');
var HtmlPagesRenderer = require('react-page-renderer').HtmlPagesRenderer;
var PDFPagesTrigger = require('react-page-renderer').PDFPagesTrigger;
var BootstrapPublisher = require('react-page-renderer').BootstrapPublisher;

var WidgetFactory = require('react-designer-widgets');
var widgets = new WidgetFactory().getWidgets();

var _ = require('underscore');

//external widgets with more controls
var ReactBootstrap = require('react-bootstrap');

	_.each(['Input','Button', 'Panel','Glyphicon','Tooltip','Alert','Label'],function(widgetName){
		var name = 'ReactBootstrap.' + widgetName;
		widgets[name] = ReactBootstrap[widgetName];
	});

var Modal = ReactBootstrap.Modal;
var ModalTrigger = ReactBootstrap.ModalTrigger;
var Button = ReactBootstrap.Button;

var FormattedMessage = require('react-intl').FormattedMessage;
widgets[FormattedMessage];
var request = require('superagent');


const MyModal = React.createClass({
	
	render() {
		var style = {height:'70vh'};
		var schema = this.props.schema || {};
		var businessRules = schema.businessRules || {};
		return (
			<Modal {...this.props} bsSize='large' title='Modal heading' animation={false}>
				<div style={style} className='modal-body'>
					<BootstrapPublisher widgets={widgets} schema={schema} rules={businessRules} dataContext={this.props.dataContext} />
				</div>
				<div className='modal-footer'>
					<pre>{JSON.stringify(this.props.dataContext.value)}</pre>
					<Button onClick={this.props.onRequestHide}>Close</Button>
				</div>
			</Modal>
		);	
	}
});

var App = React.createClass({
	mixins:[BindToMixin],
	getInitialState(){
		var schema =
		//{"elementName":"ObjectSchema","name":"SimpleInvoice_Input","containers":[{"name":"header","elementName":"Container","style":{"top":0,"left":0,"height":106,"width":748,"position":"relative"},"boxes":[{"name":"ReactBootstrap.Input","elementName":"ReactBootstrap.Input","style":{"top":0,"left":0},"type":"text","placeholder":"type your firm name","label":"Supplier","value":{"Path":"From.Name","Mode":"TwoWay"}}],"containers":[]},{"name":"Copy header","elementName":"Container","style":{"top":0,"left":0,"height":106,"width":748,"position":"relative"},"boxes":[{"name":"ReactBootstrap.Input","elementName":"ReactBootstrap.Input","style":{"top":0,"left":0},"type":"text","placeholder":"type your firm name","label":"Customer","value":{"Path":"To.Name","Mode":"TwoWay"}}],"containers":[],"Visibility":{"Path":""}},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":186,"width":751,"position":"relative"},"boxes":[],"containers":[{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":51,"width":226,"position":"relative"},"boxes":[{"name":"ReactBootstrap.Button","elementName":"ReactBootstrap.Button","style":{"top":0,"left":4},"bsSize":"medium","content":"add","onAdd":{"Path":"Items"}}],"containers":[]},{"name":"repeater","elementName":"Repeater","style":{"top":0,"left":0,"height":91,"width":740,"position":"relative"},"boxes":[{"name":"ReactBootstrap.Input","elementName":"ReactBootstrap.Input","style":{"top":0,"left":0,"width":300},"type":"text","placeholder":"type your description","label":"Description","value":{"Path":"Description","Mode":"TwoWay"}},{"name":"Copy ReactBootstrap.Input","elementName":"ReactBootstrap.Input","style":{"top":0,"left":328,"width":100},"type":"number","placeholder":"units","label":"Units","value":{"Path":"Quantity.Units","Converter":"Number","Mode":"TwoWay"}},{"name":"Copy Copy ReactBootstrap.Input","elementName":"ReactBootstrap.Input","style":{"top":-1,"left":461,"width":100},"type":"number","placeholder":"price","label":"Unit price","value":{"Path":"Quantity.UnitPrice","Converter":"Number","Mode":"TwoWay"}},{"name":"JSXBox","elementName":"JSXBox","style":{"top":29,"left":584},"content":"var data = props.Binding;\nvar total = data.Units * data.UnitPrice\nreturn <div><strong>{total}</strong></div>","Binding":{"Path":"Quantity"}},{"name":"ReactBootstrap.Button","elementName":"ReactBootstrap.Button","style":{"top":21,"left":631},"bsSize":"medium","content":"remove","onAdd":{},"onRemove":{"Path":"Items"}}],"containers":[],"Binding":{"Path":"Items"}},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":29,"width":736,"position":"relative"},"boxes":[],"containers":[]}],"Visibility":{}}],"data":{"From":{"Name":"Creative invoice","Address":{"Street":"Ulic","Number":"cp","ZipCode":"100 00","City":"PRAHA 10","State":"Czech Republic"}},"To":{"Name":"Customer","Address":{"Street":"Hello","Number":"55","ZipCode":"300 00","City":"London","State":"Great Britain"}},"Items":[{"Quantity":{"Units":10,"UnitPrice":20},"Description":"Creative invoice desing"},{"Quantity":{"Units":10,"UnitPrice":200},"Description":"Creative invoice desing"},{"Quantity":{"Units":2,"UnitPrice":200},"Description":"Prepare colors"},{"Quantity":{"Units":1,"UnitPrice":400},"Description":"Draw images for invoice desing"},{"Quantity":{"Units":5,"UnitPrice":10},"Description":"Testing and deployment"}]},"businessRules":{"From":{"type":"object","properties":{"Name":{"type":"string","title":"First name","required":"true","maxLength":"100"}}},"Items":{"type":"array","items":{"type":"object","properties":{"Description":{"type":"string","title":"Description","required":"true","maxLength":100},"Quantity":{"type":"object","properties":{"Units":{"type":"number","title":"Units","required":"true","minimum":1,"maximum":1000},"UnitPrice":{"type":"number","title":"UnitPrice","required":"true","minimum":1,"maximum":100000}}}}},"maxItems":4,"minItems":2}},"input":true,"title":"Invoice - input"}
		//{"elementName":"ObjectSchema","name":"rootContainer","containers":[{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":200,"width":740,"position":"relative"},"boxes":[{"name":"JSXBox","elementName":"JSXBox","style":{"top":0,"left":0},"content":"var valueModel = props.valueLink;\nif (valueModel === undefined) {valueModel = {value:1000};}\nreturn <div>\n     <ul>\n  \t\t\t\t<li><FormattedNumber value={valueModel.value} style=\"currency\"  currency=\"USD\" /></li>\n                <li><FormattedNumber value={valueModel.value} /></li>\n                <li><FormattedNumber value={valueModel.value} format=\"percentage\" /></li>\n                <li><FormattedNumber value={valueModel.value} format=\"USD\" /></li>\n     </ul>\n</div>","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {var valueModel = props.valueLink;\nif (valueModel === undefined) {valueModel = {value:1000};}\nreturn React.createElement(\"div\", null, \n     React.createElement(\"ul\", null, \n  \t\t\t\tReact.createElement(\"li\", null, React.createElement(FormattedNumber, {value: valueModel.value, style: \"currency\", currency: \"USD\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: valueModel.value})), \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: valueModel.value, format: \"percentage\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: valueModel.value, format: \"USD\"}))\n     )\n)})();","locales":{"Path":"locales"}}],"containers":[]}],"data":{"amount":60000,"locales":["cs-CZ"]},"intlData":{"locales":"en-US","formats":{"number":{"USD":{"style":"currency","currency":"CZE","minimumFractionDigits":2},"percentage":{"style":"percent"}}}}}
		//{"elementName":"ObjectSchema","name":"rootContainer","containers":[{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":288,"width":741,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":0,"left":0},"content":"<h2><strong>React Intl</strong></h2>\n<p><em>React Components for internationalization</em></p>\n<p><strong><a href=\"http://formatjs.io/react/\">http://formatjs.io/react/</a></strong></p>\n<p>This library provides React Components and a Mixin to format data and strings, and internationalize your React app.</p>\n<h3><strong> Features</strong></h3>\n<ul>\n<li>Formats numbers and dates/times, including those in complex messages.</li>\n<li>Formats relative times (e.g., \"3 hours ago\").</li>\n<li>Formats complex messages, including plural and select arguments using ICU Message syntax.</li>\n<li>Supports custom formatters for numbers and dates/times.</li>\n</ul>"}],"containers":[]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":253,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":0,"left":0},"content":"<h3><strong>Components</strong></h3>\n<p>The React Intl Components provide a way to declaratively format data and message strings. Using the Components is the recommended way to use React Intl.</p>\n<ul>\n<li><strong>FormattedDate</strong> formats a date value</li>\n<li><strong>FormattedTime</strong> formats a date value with time formats</li>\n<li><strong> FormattedRelative</strong> formats a date relative to now; e.g. \"3 hours ago\"</li>\n<li><strong> FormattedNumber</strong> formats a number value</li>\n<li><strong>FormattedMessage</strong> formats a translated string message</li>\n<li><strong>FormattedHTMLMessage</strong> formats a translated string message</li>\n</ul>"}],"containers":[]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":66,"width":748,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Examples","font":{"bold":true,"size":18}}],"containers":[{"name":"selectLang","elementName":"Container","style":{"top":0,"left":500,"height":40,"width":200,"position":"relative"},"boxes":[{"name":"SelectBoxInput","elementName":"SelectBoxInput","style":{"top":0,"left":0},"options":{"Path":"localeOptions"},"selectedItems":{"Path":"selectedItems","Mode":"TwoWay"}}],"containers":[]}]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":116,"width":743,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Format Numbers with Separators","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>The component <strong>FormattedNumber</strong> is used to represent a number in a way appropriate for the current locale. It formats numbers using Intl.NumberFormat.<strong> The number to format is passed via the value prop.</strong></p>"}],"containers":[]},{"name":"Copy container","elementName":"Container","style":{"top":0,"left":0,"height":89,"width":745,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":0,"left":0},"content":"return (<ul>\n  \t\t\t<li><FormattedNumber value={4200} /></li>\n                <li><FormattedNumber value={0.9} style=\"percent\" /></li>\n                <li>\n                    <FormattedNumber\n                        value={99.95}\n                        style=\"currency\"\n                        currency=\"USD\" />\n                </li>\n     </ul>)\n","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {return (React.createElement(\"ul\", null, \n  \t\t\tReact.createElement(\"li\", null, React.createElement(FormattedNumber, {value: 4200})), \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: 0.9, style: \"percent\"})), \n                React.createElement(\"li\", null, \n                    React.createElement(FormattedNumber, {\n                        value: 99.95, \n                        style: \"currency\", \n                        currency: \"USD\"})\n                )\n     ))\n})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]},{"name":"Copy container","elementName":"Container","style":{"top":0,"left":0,"height":116,"width":743,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Format Dates and Times Correctly","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>The <strong>FormattedDate</strong> Component is used to represent a date in a way appropriate for the current locale. It formats dates using Intl.DateTimeFormat. <strong>The date to format is passed via the value prop.</strong></p>"}],"containers":[]},{"name":"Copy Copy container","elementName":"Container","style":{"top":0,"left":0,"height":48,"width":747,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":1,"left":0},"content":"return   (<p>\n                <FormattedDate\n                    value={new Date()}\n                    day=\"numeric\"\n                    month=\"long\"\n                    year=\"numeric\" />\n            </p>)","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {return   (React.createElement(\"p\", null, \n                React.createElement(FormattedDate, {\n                    value: new Date(), \n                    day: \"numeric\", \n                    month: \"long\", \n                    year: \"numeric\"})\n            ))})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]},{"name":"Copy Copy container","elementName":"Container","style":{"top":0,"left":0,"height":155,"width":747,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Pluralize Labels in Strings","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>When internationalizing a React app, you will need a way to localize your UI strings, including any logic pieces like pluralization rules for all the languages you wish to support. These strings should be externalized from your React components so that the same React component can be used for all languages. Using the IntlMixin and <strong>FormattedMessage</strong> Component together provides a way to lookup and format language-specific strings.</p>"}],"containers":[],"unbreakable":true},{"name":"pluralize","elementName":"Container","style":{"top":0,"left":0,"height":64,"width":748,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":1,"left":0},"content":"return   (<p>\n                 <FormattedMessage\n                    message={self.getIntlMessage(props.locales +'.photos')}\n                    name=\"Annie\"\n                    numPhotos={1000}\n                    takenDate={Date.now()} />\n            </p>)","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {return   (React.createElement(\"p\", null, \n                 React.createElement(FormattedMessage, {\n                    message: self.getIntlMessage(props.locales +'.photos'), \n                    name: \"Annie\", \n                    numPhotos: 1000, \n                    takenDate: Date.now()})\n            ))})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]},{"name":"Copy Copy Copy container","elementName":"Container","style":{"top":0,"left":0,"height":132,"width":750,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Define Your Own Custom Formats","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>The <strong><em>IntlMixin</em> </strong>allows you to define named formats that can be used throughout the entire application or within a component hierarchy. These named format can be specified for<em><strong> date, time, number and relative</strong></em> format types. The following example illustrates how these custom named formats work.</p>"}],"containers":[]},{"name":"Copy pluralize","elementName":"Container","style":{"top":0,"left":0,"height":119,"width":750,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":1,"left":0},"content":"var yesterday = Date.now() - (1000 * 60 * 60 * 24);\nreturn (\n            <ul>\n                <li><FormattedNumber value={1400.34} format=\"USD\" /></li>\n                <li><FormattedDate value={1390518044403} format=\"short\" /></li>\n                <li><FormattedTime value={new Date()} format=\"hhmm\" /></li>\n                <li><FormattedRelative value={yesterday} format=\"hours\" /></li>\n            </ul>\n        );","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {var yesterday = Date.now() - (1000 * 60 * 60 * 24);\nreturn (\n            React.createElement(\"ul\", null, \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: 1400.34, format: \"USD\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedDate, {value: 1390518044403, format: \"short\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedTime, {value: new Date(), format: \"hhmm\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedRelative, {value: yesterday, format: \"hours\"}))\n            )\n        );})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]}],"data":{"amount":60000,"locales":["en-US"],"selectedItems":[{"value":"cs-CZ","label":"CZE"}],"localeOptions":[{"value":"cs-CZ","label":"Czech Republic"},{"value":"en-US","label":"United States"},{"value":"de-DE","label":"Germany"}]},"intlData":{"locales":"en-US","formats":{"number":{"USD":{"style":"currency","currency":"USD","minimumFractionDigits":2}},"date":{"short":{"day":"numeric","month":"long","year":"numeric"}},"time":{"hhmm":{"hour":"numeric","minute":"numeric"}},"relative":{"hours":{"units":"hour","style":"numeric"}}},"messages":{"en-US":{"photos":"{name} took {numPhotos, plural,\n  =0 {no photos}\n  =1 {one photo}\n  other {# photos}\n} on {takenDate, date, long}.\n"},"de-DE":{"photos":"{name} hat {numPhotos, plural,\n  =0 {kein Foto}\n  =1 {ein Foto}\n  other {# Fotos}\n} am {takenDate, date, long} gemacht.\n"},"cs-CZ":{"photos":"{name} udělala {numPhotos, plural,\n  =0 {žádnou fotku}\n  =1 {jednu fotku}\n  other {# fotek}\n} dne {takenDate, date, long}.\n"}}}}
		//{"elementName":"ObjectSchema","name":"rootContainer","containers":[{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":288,"width":741,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":0,"left":0},"content":"<h2><strong>React Intl</strong></h2>\n<p><em>React Components for internationalization</em></p>\n<p><strong><a href=\"http://formatjs.io/react/\">http://formatjs.io/react/</a></strong></p>\n<p>This library provides React Components and a Mixin to format data and strings, and internationalize your React app.</p>\n<h3><strong> Features</strong></h3>\n<ul>\n<li>Formats numbers and dates/times, including those in complex messages.</li>\n<li>Formats relative times (e.g., \"3 hours ago\").</li>\n<li>Formats complex messages, including plural and select arguments using ICU Message syntax.</li>\n<li>Supports custom formatters for numbers and dates/times.</li>\n</ul>"}],"containers":[]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":253,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":0,"left":0},"content":"<h3><strong>Components</strong></h3>\n<p>The React Intl Components provide a way to declaratively format data and message strings. Using the Components is the recommended way to use React Intl.</p>\n<ul>\n<li><strong>FormattedDate</strong> formats a date value</li>\n<li><strong>FormattedTime</strong> formats a date value with time formats</li>\n<li><strong> FormattedRelative</strong> formats a date relative to now; e.g. \"3 hours ago\"</li>\n<li><strong> FormattedNumber</strong> formats a number value</li>\n<li><strong>FormattedMessage</strong> formats a translated string message</li>\n<li><strong>FormattedHTMLMessage</strong> formats a translated string message</li>\n</ul>"}],"containers":[]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":66,"width":748,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Examples","font":{"bold":true,"size":18}},{"name":"ValueBox","elementName":"ValueBox","style":{"top":2,"left":117},"emptyValue":"---","content":{"Path":"selectedItems[0].value"}}],"containers":[{"name":"selectLang","elementName":"Container","style":{"top":0,"left":500,"height":40,"width":200,"position":"relative"},"boxes":[{"name":"SelectBoxInput","elementName":"SelectBoxInput","style":{"top":0,"left":0},"options":{"Path":"localeOptions"},"selectedItems":{"Path":"selectedItems","Mode":"TwoWay"}}],"containers":[]}]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":116,"width":743,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Format Numbers with Separators","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>The component <strong>FormattedNumber</strong> is used to represent a number in a way appropriate for the current locale. It formats numbers using Intl.NumberFormat.<strong> The number to format is passed via the value prop.</strong></p>"}],"containers":[]},{"name":"Copy container","elementName":"Container","style":{"top":0,"left":0,"height":89,"width":745,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":0,"left":0},"content":"return (<ul>\n  \t\t\t<li><FormattedNumber value={4200} /></li>\n                <li><FormattedNumber value={0.9} style=\"percent\" /></li>\n                <li>\n                    <FormattedNumber\n                        value={99.95}\n                        style=\"currency\"\n                        currency=\"USD\" />\n                </li>\n     </ul>)\n","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {return (React.createElement(\"ul\", null, \n  \t\t\tReact.createElement(\"li\", null, React.createElement(FormattedNumber, {value: 4200})), \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: 0.9, style: \"percent\"})), \n                React.createElement(\"li\", null, \n                    React.createElement(FormattedNumber, {\n                        value: 99.95, \n                        style: \"currency\", \n                        currency: \"USD\"})\n                )\n     ))\n})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]},{"name":"Copy container","elementName":"Container","style":{"top":0,"left":0,"height":116,"width":743,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Format Dates and Times Correctly","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>The <strong>FormattedDate</strong> Component is used to represent a date in a way appropriate for the current locale. It formats dates using Intl.DateTimeFormat. <strong>The date to format is passed via the value prop.</strong></p>"}],"containers":[]},{"name":"Copy Copy container","elementName":"Container","style":{"top":0,"left":0,"height":48,"width":747,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":1,"left":0},"content":"return   (<p>\n                <FormattedDate\n                    value={new Date()}\n                    day=\"numeric\"\n                    month=\"long\"\n                    year=\"numeric\" />\n            </p>)","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {return   (React.createElement(\"p\", null, \n                React.createElement(FormattedDate, {\n                    value: new Date(), \n                    day: \"numeric\", \n                    month: \"long\", \n                    year: \"numeric\"})\n            ))})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]},{"name":"Copy Copy container","elementName":"Container","style":{"top":0,"left":0,"height":155,"width":747,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Pluralize Labels in Strings","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>When internationalizing a React app, you will need a way to localize your UI strings, including any logic pieces like pluralization rules for all the languages you wish to support. These strings should be externalized from your React components so that the same React component can be used for all languages. Using the IntlMixin and <strong>FormattedMessage</strong> Component together provides a way to lookup and format language-specific strings.</p>"}],"containers":[],"unbreakable":true},{"name":"pluralize","elementName":"Container","style":{"top":0,"left":0,"height":64,"width":748,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":1,"left":0},"content":"return   (<p>\n                 <FormattedMessage\n                    message={self.getIntlMessage(props.locales +'.photos')}\n                    name=\"Annie\"\n                    numPhotos={1000}\n                    takenDate={Date.now()} />\n            </p>)","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {return   (React.createElement(\"p\", null, \n                 React.createElement(FormattedMessage, {\n                    message: self.getIntlMessage(props.locales +'.photos'), \n                    name: \"Annie\", \n                    numPhotos: 1000, \n                    takenDate: Date.now()})\n            ))})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]},{"name":"Copy Copy Copy container","elementName":"Container","style":{"top":0,"left":0,"height":132,"width":750,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Define Your Own Custom Formats","font":{"bold":true,"size":16}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":43,"left":2},"content":"<p>The <strong><em>IntlMixin</em> </strong>allows you to define named formats that can be used throughout the entire application or within a component hierarchy. These named format can be specified for<em><strong> date, time, number and relative</strong></em> format types. The following example illustrates how these custom named formats work.</p>"}],"containers":[]},{"name":"Copy pluralize","elementName":"Container","style":{"top":0,"left":0,"height":119,"width":750,"position":"relative"},"boxes":[{"name":"Formats","elementName":"JSXBox","style":{"top":1,"left":0},"content":"var yesterday = Date.now() - (1000 * 60 * 60 * 24);\nreturn (\n            <ul>\n                <li><FormattedNumber value={1400.34} format=\"USD\" /></li>\n                <li><FormattedDate value={1390518044403} format=\"short\" /></li>\n                <li><FormattedTime value={new Date()} format=\"hhmm\" /></li>\n                <li><FormattedRelative value={yesterday} format=\"hours\" /></li>\n            </ul>\n        );","Binding":{"Path":"amount","Mode":"TwoWay"},"code":"(function() {var yesterday = Date.now() - (1000 * 60 * 60 * 24);\nreturn (\n            React.createElement(\"ul\", null, \n                React.createElement(\"li\", null, React.createElement(FormattedNumber, {value: 1400.34, format: \"USD\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedDate, {value: 1390518044403, format: \"short\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedTime, {value: new Date(), format: \"hhmm\"})), \n                React.createElement(\"li\", null, React.createElement(FormattedRelative, {value: yesterday, format: \"hours\"}))\n            )\n        );})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]}],"data":{"amount":60000,"locales":["en-US"],"selectedItems":[{"value":"cs-CZ","label":"CZE"}],"localeOptions":[{"value":"cs-CZ","label":"Czech Republic"},{"value":"en-US","label":"United States"},{"value":"de-DE","label":"Germany"}]},"intlData":{"locales":"en-US","formats":{"number":{"USD":{"style":"currency","currency":"USD","minimumFractionDigits":2}},"date":{"short":{"day":"numeric","month":"long","year":"numeric"}},"time":{"hhmm":{"hour":"numeric","minute":"numeric"}},"relative":{"hours":{"units":"hour","style":"numeric"}}},"messages":{"en-US":{"photos":"{name} took {numPhotos, plural,\n  =0 {no photos}\n  =1 {one photo}\n  other {# photos}\n} on {takenDate, date, long}.\n"},"de-DE":{"photos":"{name} hat {numPhotos, plural,\n  =0 {kein Foto}\n  =1 {ein Foto}\n  other {# Fotos}\n} am {takenDate, date, long} gemacht.\n"},"cs-CZ":{"photos":"{name} udělala {numPhotos, plural,\n  =0 {žádnou fotku}\n  =1 {jednu fotku}\n  other {# fotek}\n} dne {takenDate, date, long}.\n"}}}}
		{"elementName":"ObjectSchema","name":"Parks","containers":[{"name":"now","elementName":"Container","style":{"top":0,"left":0,"height":142,"width":744,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"The way it is now:","font":{"italic":true}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":1},"content":"<p>California has 278 state parks, including state beaches and historic parks. The current $400 million budget is insufficient to maintain these parks, and 150 parks will be shut down at least part-time. Most parks charge $12 per vehicle for admission.</p>"}],"containers":[]},{"name":"future","elementName":"Container","style":{"top":0,"left":0,"height":142,"width":744,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"What Prop 21 would do:","font":{"italic":true}},{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":1},"content":"<p>Proposes to charge car owners an extra $18 on their annual registration bill, to go into the state park fund. Cars that pay the charge would have free park admission.</p>"}],"containers":[]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":53,"width":740,"position":"relative"},"boxes":[{"name":"SelectBoxInput","elementName":"SelectBoxInput","style":{"top":0,"left":0},"options":{"Path":"localeOptions"},"selectedItems":{"Path":"selectedItems","Mode":"TwoWay"}}],"containers":[]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":299,"width":740,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Analysis:","font":{"italic":true}},{"name":"Input","elementName":"JSXBox","style":{"top":29,"left":1},"content":"var valueModel = props.valueLink;\nif (valueModel === undefined) return;//var mixin = new BindToMixin();\nvar tax = BindToMixin.bindTo(valueModel,'tax');\nvar percentCompliance =  BindToMixin.bindTo(valueModel,'percentCompliance');\nvar isTaxPerVehicle = BindToMixin.bindTo(valueModel,'isTaxPerVehicle');\nvar newAdmission =  BindToMixin.bindTo(valueModel,'newAdmission');\nvar newAdmissionAppliesToEveryone =  BindToMixin.bindTo(valueModel,'newAdmissionAppliesToEveryone');\n\nreturn <FormattedMessage message={self.getIntlMessage(props.locales + \".question\")} \n\ttax={<TangleText valueLink={tax}  min={0} max={50} width={25} />} \n    percentCompliance={<TangleText valueLink={percentCompliance} min={0} max={100} width={25} />} \n    isTaxPerVehicle={<BoolText valueLink={isTaxPerVehicle} trueComponent={<FormattedMessage message={self.getIntlMessage(props.locales + \".isTaxPerVehicle.true\")} />} falseComponent={<FormattedMessage message={self.getIntlMessage(props.locales + \".isTaxPerVehicle.false\")} />} />} \n    newAdmission={<TangleText valueLink={newAdmission} min={0} max={25} width={25} />} \n    newAdmissionAppliesToEveryone={<BoolText valueLink={newAdmissionAppliesToEveryone} trueComponent={<FormattedMessage message={self.getIntlMessage(props.locales + \".newAdmissionAppliesToEveryone.true\")} />} falseComponent={<FormattedMessage message={self.getIntlMessage(props.locales + \".newAdmissionAppliesToEveryone.false\")} />} />} />","Binding":{"Path":"data","Mode":"TwoWay"},"code":"(function() {var valueModel = props.valueLink;\nif (valueModel === undefined) return;//var mixin = new BindToMixin();\nvar tax = BindToMixin.bindTo(valueModel,'tax');\nvar percentCompliance =  BindToMixin.bindTo(valueModel,'percentCompliance');\nvar isTaxPerVehicle = BindToMixin.bindTo(valueModel,'isTaxPerVehicle');\nvar newAdmission =  BindToMixin.bindTo(valueModel,'newAdmission');\nvar newAdmissionAppliesToEveryone =  BindToMixin.bindTo(valueModel,'newAdmissionAppliesToEveryone');\n\nreturn React.createElement(FormattedMessage, {message: self.getIntlMessage(props.locales + \".question\"), \n\ttax: React.createElement(TangleText, {valueLink: tax, min: 0, max: 50, width: 25}), \n    percentCompliance: React.createElement(TangleText, {valueLink: percentCompliance, min: 0, max: 100, width: 25}), \n    isTaxPerVehicle: React.createElement(BoolText, {valueLink: isTaxPerVehicle, trueComponent: React.createElement(FormattedMessage, {message: self.getIntlMessage(props.locales + \".isTaxPerVehicle.true\")}), falseComponent: React.createElement(FormattedMessage, {message: self.getIntlMessage(props.locales + \".isTaxPerVehicle.false\")})}), \n    newAdmission: React.createElement(TangleText, {valueLink: newAdmission, min: 0, max: 25, width: 25}), \n    newAdmissionAppliesToEveryone: React.createElement(BoolText, {valueLink: newAdmissionAppliesToEveryone, trueComponent: React.createElement(FormattedMessage, {message: self.getIntlMessage(props.locales + \".newAdmissionAppliesToEveryone.true\")}), falseComponent: React.createElement(FormattedMessage, {message: self.getIntlMessage(props.locales + \".newAdmissionAppliesToEveryone.false\")})})})})();","locales":{"Path":"selectedItems[0].value"}},{"name":"JSXBoxOutput","elementName":"JSXBox","style":{"top":120,"left":1},"content":"var parkCount = 278;\nvar oldAdmission = 12;\nvar registeredVehicleCount = 28e6;  // http://www.yesforstateparks.com/get-the-facts/fact-sheets/general-fact-sheet\nvar taxpayerCount = 13657632;  // http://trac.syr.edu/tracirs/findings/aboutTP/states/California/counties/06000/06000main.html\nvar oldVisitorCount = 75e6;  // http://parks.ca.gov/pages/712/files/budget%20fact%20sheet%20w-graphics%20-%2001-14-08.pdf\nvar oldBudget = 400e6; // this is not really correct, it ignores revenue, but I couldn't find any revenue data\nvar oldClosedParkCount = 150;\n\nvar percentOfAdmissionConvertedToRevenue = 0.1;  // total BS, couldn't find real data, just trying to make the numbers work\nvar percentInStateVistors = 85;\nvar percentVehicleOwners = 95;\nif (props.valueLink === undefined) return;\nvar data = props.valueLink.value\nvar tax = data.tax;\nvar percentCompliance = data.percentCompliance;\nvar isTaxPerVehicle = data.isTaxPerVehicle;\nvar newAdmission = data.newAdmission;\nvar newAdmissionAppliesToEveryone = data.newAdmissionAppliesToEveryone; \n\n\nvar taxCount = isTaxPerVehicle ? registeredVehicleCount : taxpayerCount;\nvar taxCollected = tax * percentCompliance/100 * taxCount;\n            \nvar fractionOfVisitorsEligibleForNewAdmission = newAdmissionAppliesToEveryone ?1:\n\t(percentInStateVistors/100 * (isTaxPerVehicle ? (percentVehicleOwners/100) : 1));\nvar averageAdmission = oldAdmission + fractionOfVisitorsEligibleForNewAdmission * (newAdmission - oldAdmission);\n\n// fake demand curve\nvar newVisitorCount = oldVisitorCount * Math.max(0.2, 1 + 0.5*Math.atan(1 - averageAdmission/oldAdmission));\n            \nvar oldRevenue = oldVisitorCount * oldAdmission * percentOfAdmissionConvertedToRevenue;\nvar newRevenue = newVisitorCount * averageAdmission * percentOfAdmissionConvertedToRevenue;\n            \nvar deltaRevenue = newRevenue - oldRevenue;\nvar deltaBudget = taxCollected + deltaRevenue;\nvar deltaVisitorCount = newVisitorCount - oldVisitorCount;\nvar relativeVisitorCount = Math.abs(deltaVisitorCount / oldVisitorCount);\n\nvar budget = oldBudget + deltaBudget;\n            \nvar maintainanceBudget = 600e6;\nvar repairBudget = 750e6;\nvar maxBudget = 1000e6;\n\nvar scenarioIndex;\nvar closedParkCount = 0;\nvar surplus;\nvar restorationTime;\n            if (budget < maintainanceBudget) {\n                scenarioIndex = 0;\n                closedParkCount = Math.round(oldClosedParkCount * (maintainanceBudget - budget) / (maintainanceBudget - oldBudget));\n            }\n            else if (budget < repairBudget) {\n                scenarioIndex = 1;\n            }\n            else if (budget < maxBudget) {\n                scenarioIndex = 2;\n                restorationTime = Math.round(10 - 9 * (budget - repairBudget) / (maxBudget - repairBudget));\n            }\n            else {\n                scenarioIndex = 3;\n                surplus = budget - maxBudget;\n            }\nreturn <div>\n  <FormattedMessage\n                    message={self.getIntlMessage(props.locales +'.parkBudget')}\n                    deltaBudgetPositive={deltaBudget>0}\n                    deltaBudget={<b><FormattedNumber value={deltaBudget} format=\"USD\" /></b>}\n                    taxCollected={<b><FormattedNumber value={taxCollected} format=\"USD\" /></b>}\n                    deltaRevenue={<b><FormattedNumber value={deltaRevenue} format=\"USD\" /></b>}\n                    budget={<b><FormattedNumber value={budget} format=\"USD\" /></b>}\n                    restorationTime={<b>{restorationTime}</b>} />\n                      <br/><br/>\n  <FormattedMessage\n                    message={self.getIntlMessage(props.locales +'.parkAttendance')}\n                    deltaVisitorCount={deltaVisitorCount>0}\n                    relativeVisitorCount={<b><FormattedNumber value={relativeVisitorCount} format=\"percentage\" /></b>}\n                    newVisitorCount={<b><FormattedNumber value={newVisitorCount} format=\"count\" /></b>} />\n</div>","code":"(function() {var parkCount = 278;\nvar oldAdmission = 12;\nvar registeredVehicleCount = 28e6;  // http://www.yesforstateparks.com/get-the-facts/fact-sheets/general-fact-sheet\nvar taxpayerCount = 13657632;  // http://trac.syr.edu/tracirs/findings/aboutTP/states/California/counties/06000/06000main.html\nvar oldVisitorCount = 75e6;  // http://parks.ca.gov/pages/712/files/budget%20fact%20sheet%20w-graphics%20-%2001-14-08.pdf\nvar oldBudget = 400e6; // this is not really correct, it ignores revenue, but I couldn't find any revenue data\nvar oldClosedParkCount = 150;\n\nvar percentOfAdmissionConvertedToRevenue = 0.1;  // total BS, couldn't find real data, just trying to make the numbers work\nvar percentInStateVistors = 85;\nvar percentVehicleOwners = 95;\nif (props.valueLink === undefined) return;\nvar data = props.valueLink.value\nvar tax = data.tax;\nvar percentCompliance = data.percentCompliance;\nvar isTaxPerVehicle = data.isTaxPerVehicle;\nvar newAdmission = data.newAdmission;\nvar newAdmissionAppliesToEveryone = data.newAdmissionAppliesToEveryone; \n\n\nvar taxCount = isTaxPerVehicle ? registeredVehicleCount : taxpayerCount;\nvar taxCollected = tax * percentCompliance/100 * taxCount;\n            \nvar fractionOfVisitorsEligibleForNewAdmission = newAdmissionAppliesToEveryone ?1:\n\t(percentInStateVistors/100 * (isTaxPerVehicle ? (percentVehicleOwners/100) : 1));\nvar averageAdmission = oldAdmission + fractionOfVisitorsEligibleForNewAdmission * (newAdmission - oldAdmission);\n\n// fake demand curve\nvar newVisitorCount = oldVisitorCount * Math.max(0.2, 1 + 0.5*Math.atan(1 - averageAdmission/oldAdmission));\n            \nvar oldRevenue = oldVisitorCount * oldAdmission * percentOfAdmissionConvertedToRevenue;\nvar newRevenue = newVisitorCount * averageAdmission * percentOfAdmissionConvertedToRevenue;\n            \nvar deltaRevenue = newRevenue - oldRevenue;\nvar deltaBudget = taxCollected + deltaRevenue;\nvar deltaVisitorCount = newVisitorCount - oldVisitorCount;\nvar relativeVisitorCount = Math.abs(deltaVisitorCount / oldVisitorCount);\n\nvar budget = oldBudget + deltaBudget;\n            \nvar maintainanceBudget = 600e6;\nvar repairBudget = 750e6;\nvar maxBudget = 1000e6;\n\nvar scenarioIndex;\nvar closedParkCount = 0;\nvar surplus;\nvar restorationTime;\n            if (budget < maintainanceBudget) {\n                scenarioIndex = 0;\n                closedParkCount = Math.round(oldClosedParkCount * (maintainanceBudget - budget) / (maintainanceBudget - oldBudget));\n            }\n            else if (budget < repairBudget) {\n                scenarioIndex = 1;\n            }\n            else if (budget < maxBudget) {\n                scenarioIndex = 2;\n                restorationTime = Math.round(10 - 9 * (budget - repairBudget) / (maxBudget - repairBudget));\n            }\n            else {\n                scenarioIndex = 3;\n                surplus = budget - maxBudget;\n            }\nreturn React.createElement(\"div\", null, \n  React.createElement(FormattedMessage, {\n                    message: self.getIntlMessage(props.locales +'.parkBudget'), \n                    deltaBudgetPositive: deltaBudget>0, \n                    deltaBudget: React.createElement(\"b\", null, React.createElement(FormattedNumber, {value: deltaBudget, format: \"USD\"})), \n                    taxCollected: React.createElement(\"b\", null, React.createElement(FormattedNumber, {value: taxCollected, format: \"USD\"})), \n                    deltaRevenue: React.createElement(\"b\", null, React.createElement(FormattedNumber, {value: deltaRevenue, format: \"USD\"})), \n                    budget: React.createElement(\"b\", null, React.createElement(FormattedNumber, {value: budget, format: \"USD\"})), \n                    restorationTime: React.createElement(\"b\", null, restorationTime)}), \n                      React.createElement(\"br\", null), React.createElement(\"br\", null), \n  React.createElement(FormattedMessage, {\n                    message: self.getIntlMessage(props.locales +'.parkAttendance'), \n                    deltaVisitorCount: deltaVisitorCount>0, \n                    relativeVisitorCount: React.createElement(\"b\", null, React.createElement(FormattedNumber, {value: relativeVisitorCount, format: \"percentage\"})), \n                    newVisitorCount: React.createElement(\"b\", null, React.createElement(FormattedNumber, {value: newVisitorCount, format: \"count\"}))})\n)})();","locales":{"Path":"selectedItems[0].value"}}],"containers":[]}],"data":{"data":{"tax":18,"percentCompliance":100,"isTaxPerVehicle":true,"newAdmission":0,"AdmissionAppliesToEveryone":false},"selectedItems":[{"value":"cs-CZ","label":"USD"}],"localeOptions":[{"value":"cs-CZ","label":"Czech Republic"},{"value":"en-US","label":"United States"},{"value":"de-DE","label":"Germany"}]},"title":"Californie Parks","intlData":{"locales":"en-US","formats":{"number":{"USD":{"style":"currency","currency":"USD","maximumFractionDigits":0},"percentage":{"style":"percent","maximumFractionDigits":0},"count":{"style":"decimal","maximumFractionDigits":0}}},"messages":{"en-US":{"question":"Suppose that an extra $ {tax} was charged to  {percentCompliance} % of {isTaxPerVehicle}. Park admission would be $ {newAdmission} for {newAdmissionAppliesToEveryone}","isTaxPerVehicle":{"false":"California taxplayers","true":"vehicle registrations"},"newAdmissionAppliesToEveryone":{"true":"everybody","false":"those who paid the charge"},"parkAttendance":"Park attendance would {deltaVisitorCount, select,\n true {rise}\n  false {fall}\n} by {relativeVisitorCount}, to {newVisitorCount} visits each year.","parkBudget":"This would collect an extra {deltaBudget} ({taxCollected} from the tax, minus {deltaRevenue} lost revenue from admission) for a total state park budget of {budget}. This is sufficient to maintain the parks in their current state, plus fund a program to bring safety and cleanliness up to acceptable standards over the next {restorationTime} years."},"de-DE":{"photos":"{name} hat {numPhotos, plural,\n  =0 {kein Foto}\n  =1 {ein Foto}\n  other {# Fotos}\n} am {takenDate, date, long} gemacht.\n"},"cs-CZ":{"question":"Předpokládej me, že bude vybráno více o $ {tax} až  {percentCompliance} % z {isTaxPerVehicle}. Parkovací poplatek bude $ {newAdmission} pro {newAdmissionAppliesToEveryone}","isTaxPerVehicle":{"false":"California daňoví poplatníci","true":"automobilové registrace "},"newAdmissionAppliesToEveryone":{"true":"každý","false":"ty, co platí poplatek"},"parkAttendance":"Návštěvnost parku bude {deltaVisitorCount, select,\n true {stoupat}\n  false {klesat}\n} o {relativeVisitorCount} až k {newVisitorCount} náštěv každý rok.","parkBudget":"Dojde k {deltaBudgetPositive, select,\n true {růstu}\n  false {poklesu}\n} o {deltaBudget} ({taxCollected} z daní, mínus {deltaRevenue} ztráta z výnusů z poplatků) pro celkový rozpočet ve výši {budget}. To je dostatečné k financování provozu parku v současném stavu, plus k financování programu na bezpčenost a zvýšení čistoty na úroveň akceptovantelných standardů během dalších {restorationTime} roků."}}}}
		//{"elementName":"ObjectSchema","name":"rootContainer","containers":[{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":200,"width":740,"position":"relative"},"boxes":[{"name":"SelectBoxInput","elementName":"SelectBoxInput","style":{"top":0,"left":0},"options":{"Path":"options"},"selectedItems":{"Path":"selectedItems","Mode":"TwoWay"}},{"name":"JSXBox","elementName":"JSXBox","style":{"top":69,"left":6},"content":"var valueModel = props.valueLink\nif (valueModel === undefined) valueModel = {value:[]}\nreturn <div>{JSON.stringify(valueModel.value)}</div>","Binding":{"Path":"selectedItems","Mode":"TwoWay"},"code":"(function() {var valueModel = props.valueLink\nif (valueModel === undefined) valueModel = {value:[]}\nreturn React.createElement(\"div\", null, JSON.stringify(valueModel.value))})();"},{"name":"ValueBox","elementName":"ValueBox","style":{"top":120,"left":7},"emptyValue":"---","content":{"Path":"selectedItems[0].value"}}],"containers":[]}],"data":{"options":[{"value":"one","label":"one"},{"value":"two","label":"two"}],"selectedItems":[{"value":"two","label":"two"}]}}
		//var schema = {"elementName":"ObjectSchema","name":"rootContainer","containers":[{"name":"secHeader","elementName":"Container","style":{"top":0,"left":0,"height":117,"width":750,"position":"relative"},"boxes":[{"name":"Shapes.Rectangle","elementName":"Shapes.Rectangle","style":{"top":0,"left":null,"width":740,"height":80},"height":80,"width":780,"x":0,"y":0,"stroke":"#000000","fill":"#1b88bc","strokeWidth":0},{"name":"TextBox","elementName":"TextBox","style":{"top":16,"left":9},"content":"Creative invoice","font":{"bold":true,"size":36,"italic":false,"underline":false,"color":"#fdfbfb"}},{"name":"TextBox","elementName":"TextBox","style":{"top":13,"left":627},"content":"react-designer","font":{"color":"#faf7f7","bold":true}}],"containers":[]},{"name":"secFirm","elementName":"Container","style":{"top":0,"left":0,"height":166,"width":756,"position":"relative"},"boxes":[],"containers":[{"name":"secFrom","elementName":"Container","style":{"top":0,"left":0,"height":152,"width":365,"position":"relative"},"boxes":[{"name":"Copy Shapes.Rectangle","elementName":"Shapes.Rectangle","style":{"top":0,"left":0,"width":350,"height":40},"height":30,"width":400,"x":0,"y":0,"stroke":"#000000","fill":"#1b88bc","strokeWidth":0},{"name":"TextBox","elementName":"TextBox","style":{"top":-2,"left":7},"content":"From","font":{"color":"#f6efef","bold":true,"size":20}},{"name":"ValueBox","elementName":"ValueBox","style":{"top":61,"left":85},"emptyValue":"---","Binding":"From.Name","content":{"Path":"From.Name"}},{"name":"JSXBox","elementName":"JSXBox","style":{"top":98,"left":89},"content":"var address = props.Binding;\nreturn <div>{address.Street} {address.Number}, {address.ZipCode} {address.City}, {address.State}</div>","Binding":{"Path":"From.Address"}},{"name":"ImageBox","elementName":"ImageBox","style":{"top":60,"left":0},"url":"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSubbeuNMYlu9FiPy-JyLPyDfhQbYvyLTGgnLKHkTqXMX-mxRWqkg","width":79}],"containers":[]},{"name":"Copy secFrom","elementName":"Container","style":{"top":-150,"left":381,"height":152,"width":365,"position":"relative"},"boxes":[{"name":"Copy Shapes.Rectangle","elementName":"Shapes.Rectangle","style":{"top":0,"left":0,"width":350,"height":40},"height":30,"width":400,"x":0,"y":0,"stroke":"#000000","fill":"#1b88bc","strokeWidth":0},{"name":"TextBox","elementName":"TextBox","style":{"top":-2,"left":7},"content":"To","font":{"color":"#f6efef","bold":true,"size":20}},{"name":"ValueBox","elementName":"ValueBox","style":{"top":61,"left":85},"emptyValue":"---","Binding":"From.Name","content":{"Path":"To.Name"}},{"name":"JSXBox","elementName":"JSXBox","style":{"top":98,"left":89},"content":"var address = props.Binding;\nreturn <div>{address.Street} {address.Number}, {address.ZipCode} {address.City}, {address.State}</div>","Binding":{"Path":"To.Address"}},{"name":"ImageBox","elementName":"ImageBox","style":{"top":60,"left":0},"url":"http://www.wildspiritwolfsanctuary.org/images/button/chrome.png","width":71}],"containers":[],"left":5}],"left":-1},{"name":"repeater","elementName":"Container","style":{"top":0,"left":0,"height":227,"width":740,"position":"relative"},"boxes":[],"containers":[{"name":"secItems","elementName":"Container","style":{"top":0,"left":0,"height":76,"width":754,"position":"relative"},"boxes":[{"name":"Shapes.Rectangle","elementName":"Shapes.Rectangle","style":{"top":11,"left":-7,"width":740},"height":48,"width":739,"x":0,"y":0,"stroke":"#f7fbfb","fill":"#143994","strokeWidth":2},{"name":"Copy TextBox","elementName":"TextBox","style":{"top":17,"left":14},"content":"Items","font":{"underline":false,"bold":true,"size":24,"color":"#faf9f9"}}],"containers":[]},{"name":"header","elementName":"Container","style":{"top":0,"left":0,"height":30,"width":763,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Quantity","font":{"bold":true}},{"name":"Copy TextBox","elementName":"TextBox","style":{"top":1,"left":117},"content":"Description","font":{"bold":true}},{"name":"lab","elementName":"TextBox","style":{"top":0,"left":458},"content":"Unit Price","font":{"bold":true}},{"name":"Copy lab","elementName":"TextBox","style":{"top":2,"left":575},"content":"Total","font":{"bold":true}}],"containers":[]},{"name":"Copy secFooter","elementName":"Container","style":{"top":0,"left":0,"height":10,"width":740,"position":"relative"},"boxes":[{"name":"Shapes.Line","elementName":"Shapes.Line","style":{"top":0,"left":0,"height":15,"width":740},"x1":0,"y1":0,"x2":750,"y2":0,"stroke":"black","fill":"none","strokeWidth":6}],"containers":[]},{"name":"repeater","elementName":"Repeater","style":{"top":0,"left":0,"height":48,"width":740,"position":"relative"},"boxes":[{"name":"ValueBox","elementName":"ValueBox","style":{"top":0,"left":0},"emptyValue":"---","Binding":"HobbyName","font":{"bold":false},"content":{"Path":"Quantity.Units"}},{"name":"ReactBootstrap.Label","elementName":"ReactBootstrap.Label","style":{"top":3,"left":638},"bsSize":"medium","content":"type your content","bsStyle":"success"},{"name":"Copy ValueBox","elementName":"ValueBox","style":{"top":-1,"left":115},"emptyValue":"---","Binding":"HobbyName","font":{"bold":true},"content":{"Path":"Description"}},{"name":"unitPrice","elementName":"ValueBox","style":{"top":0,"left":454},"emptyValue":"---","Binding":"HobbyName","font":{"bold":false},"content":{"Path":"Quantity.UnitPrice"}},{"name":"JSXBox","elementName":"JSXBox","style":{"top":2,"left":577},"content":"var data = props.Binding;\nvar total = data.Units * data.UnitPrice\nreturn <div><strong>{total}</strong></div>","Binding":{"Path":"Quantity"}}],"containers":[],"Binding":{"Path":"Items"}},{"name":"secFooter","elementName":"Container","style":{"top":0,"left":0,"height":40,"width":740,"position":"relative"},"boxes":[{"name":"Shapes.Line","elementName":"Shapes.Line","style":{"top":0,"left":0,"height":10,"width":740},"x1":0,"y1":0,"x2":750,"y2":0,"stroke":"black","fill":"none","strokeWidth":6}],"containers":[]}]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":117,"width":740,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":7,"left":608},"content":"Amount Due","font":{"bold":true,"size":17}},{"name":"JSXBox","elementName":"JSXBox","style":{"top":48,"left":610},"content":"var items = props.Binding;\nvar total = 0;\nfor (var i in items){\n  var q = items[i].Quantity;\n  total +=q.Units * q.UnitPrice;\n}\nreturn <div style={{fontSize:'20px'}}><strong>{total}</strong></div>","Binding":{"Path":"Items"}}],"containers":[{"name":"header","elementName":"Container","style":{"top":0,"left":0,"height":156,"width":500,"position":"relative"},"boxes":[{"name":"HtmlBox1","elementName":"HtmlBox","style":{"top":0,"left":0},"content":"<p>Here is the descriptions about provided services and negotiated working conditions. Here is the descriptions about provided services and negotiated working conditions. Here is the descriptions about provided services and negotiated working conditions. Here is the descriptions about provided services and negotiated working conditions.</p>","columnCount":1}],"containers":[]}]},{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":119,"width":759,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":80,"left":6},"content":"Thank you very much for choosing us. It was pleasure to work with you.","font":{"bold":true,"size":16}},{"name":"ImageBox","elementName":"ImageBox","style":{"top":-26,"left":199},"url":"http://www.vietnamstay.travel/FileManager/Logo_Khachhang/Payment_logo.jpg"}],"containers":[]}],"data":{"From":{"Name":"Creative invoice","Address":{"Street":"Ulic","Number":"cp","ZipCode":"100 00","City":"PRAHA 10","State":"Czech Republic"}},"To":{"Name":"Customer","Address":{"Street":"Hello","Number":"55","ZipCode":"300 00","City":"London","State":"Great Britain"}},"Items":[{"Quantity":{"Units":10,"UnitPrice":20},"Description":"Creative invoice desing"},{"Quantity":{"Units":10,"UnitPrice":200},"Description":"Creative invoice desing"},{"Quantity":{"Units":2,"UnitPrice":200},"Description":"Prepare colors"},{"Quantity":{"Units":1,"UnitPrice":400},"Description":"Draw images for invoice desing"},{"Quantity":{"Units":5,"UnitPrice":10},"Description":"Testing and deployment"}]}};
		//{"elementName":"ObjectSchema","name":"rootContainer","containers":[{"name":"container","elementName":"Container","style":{"top":0,"left":0,"height":103,"width":745,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":46,"left":2},"content":"<p>Each inline text can be <em>styled</em> <strong>independently</strong> <span style=\"text-decoration: underline;\">then</span>.</p>"},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"This is a header","font":{"bold":true,"size":18}}],"containers":[]},{"name":"paragraph","elementName":"Container","style":{"top":0,"left":0,"height":776,"width":752,"position":"relative"},"boxes":[],"containers":[{"name":"header","elementName":"Container","style":{"top":0,"left":0,"height":51,"width":747,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Simple paragraphs","font":{"bold":true,"size":16}}],"containers":[]},{"name":"left","elementName":"Container","style":{"top":0,"left":0,"height":180,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":0},"content":"<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>"},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Left aligned","font":{"bold":true}}],"containers":[]},{"name":"centre","elementName":"Container","style":{"top":0,"left":0,"height":180,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":40,"left":0},"content":"<p style=\"text-align: center;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>"},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Centre aligned","font":{"bold":true}}],"containers":[]},{"name":"left","elementName":"Container","style":{"top":0,"left":0,"height":180,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":0},"content":"<p style=\"text-align: right;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>"},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Right aligned","font":{"bold":true}}],"containers":[]},{"name":"justified","elementName":"Container","style":{"top":0,"left":0,"height":180,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":0},"content":"<p style=\"text-align: justify;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>"},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Justified aligned","font":{"bold":true}}],"containers":[]}]},{"name":"paragraphColumns","elementName":"Container","style":{"top":0,"left":0,"height":916,"width":751,"position":"relative"},"boxes":[],"containers":[{"name":"header","elementName":"Container","style":{"top":0,"left":0,"height":34,"width":746,"position":"relative"},"boxes":[{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Paragraph with columns","font":{"bold":true,"size":16}}],"containers":[],"startOnNewPage":true},{"name":"left","elementName":"Container","style":{"top":0,"left":0,"height":204,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":0},"content":"<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>","columnCount":3},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Left aligned","font":{"bold":true}}],"containers":[]},{"name":"centre","elementName":"Container","style":{"top":0,"left":0,"height":219,"width":740,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":40,"left":0},"content":"<p style=\"text-align: center;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>","columnCount":4},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Centre aligned","font":{"bold":true}}],"containers":[]},{"name":"left","elementName":"Container","style":{"top":0,"left":0,"height":205,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":0},"content":"<p style=\"text-align: right;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>","columnCount":2},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Right aligned","font":{"bold":true}}],"containers":[]},{"name":"justified","elementName":"Container","style":{"top":0,"left":0,"height":219,"width":743,"position":"relative"},"boxes":[{"name":"HtmlBox","elementName":"HtmlBox","style":{"top":38,"left":0},"content":"<p style=\"text-align: justify;\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Malit profecta versatur nomine ocurreret multavit, officiis viveremus aeternum superstitio suspicor alia nostram, quando nostros congressus susceperant concederetur leguntur iam, vigiliae democritea tantopere causae, atilii plerumque ipsas potitur pertineant multis rem quaeri pro, legendum didicisse credere ex maluisset per videtis. Cur discordans praetereat aliae ruinae dirigentur orestem eodem, praetermittenda divinum. Collegisti, deteriora malint loquuntur officii cotidie finitas referri doleamus ambigua acute. Adhaesiones ratione beate arbitraretur detractis perdiscere, constituant hostis polyaeno. Diu concederetur.</p>","columnCount":4},{"name":"TextBox","elementName":"TextBox","style":{"top":0,"left":0},"content":"Justified aligned","font":{"bold":true}}],"containers":[]}]}],"data":{}};
		return {schema:schema,data:schema.data || {}};	
	},
	componentDidMount() {
		;
		
		//request.get('http://hand-formvalidation.rhcloud.com/assets/examples/Invoice.json')
		//	.end(function(err, res){
		//		if (res.ok) {
		//			if (this.isMounted()) {
		//				//alert(JSON.stringify(res.body));
		//				var schema = res.body;
		//				this.setState({
		//					printSchema: schema,
		//					data:schema.data || {}
		//				});
		//			}
		//		} else {
		//			alert('Oh no! error ' + res.text);
		//		}
		//	}.bind(this));
	},
	render: function() {
		
		var schema = this.state.schema;
		if (schema === undefined) return (<div>Loading ...</div>);
		var dataContext = this.bindToState('data');
		return (
			<div>
				<div>
					<PDFPagesTrigger schema={schema} data={this.state.data}>
						<input type="button" value="PDF Kit" />
					</PDFPagesTrigger>
					<PDFPagesTrigger type='pdfHummus' schema={schema} data={this.state.data}>
						<input type="button" value="PDF Hummus" />
					</PDFPagesTrigger>
					<ModalTrigger modal={<MyModal schema={schema} dataContext={dataContext} />}>
						<input type="button" value="modal" />
					</ModalTrigger>
				</div>
				<HtmlPagesRenderer widgets={widgets} schema={schema} data={this.state.data} dataContext={dataContext} intlData={schema.intlData} errorFlag={true} pageOptions={{margin:{top:20, left: 20}}} />
			</div>
		)
	}
});

React.render(<App />, document.getElementById('app'));
